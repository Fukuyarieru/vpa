@startuml
abstract class school.videopirateapp.Database.Videos {
- {static} Map<String,Video> Videos
- <<Create>> Videos()
+ {static} Map<String,Video> getVideos()
+ {static} void setVideos(HashMap<String,Video>)
+ {static} Video getVideo(String)
+ {static} void Refresh()
}


class school.videopirateapp.MainActivity {
# void onCreate(Bundle)
+ void initializeDatabase()
}

abstract class school.videopirateapp.Database.Users {
- {static} User savedUser
- <<Create>> Users()
+ {static} User getUser(String)
}


class school.videopirateapp.ListViewComponents.PlaylistListViewComponent {
# void onCreate(Bundle)
}

class school.videopirateapp.ListViewComponents.PlaylistAdapter {
- Context context
- int resource
- ArrayList<Playlist> playlists
+ <<Create>> PlaylistAdapter(Context,int,List<Playlist>)
+ View getView(int,View,ViewGroup)
+ int getCount()
}


class school.videopirateapp.Activities.PlaylistPageActivity {
~ Button btnPlaylistOptions
~ Button btnUserPage
~ Button btnBack
~ Button btnUpvote
~ Button btnDownvote
~ TextView tvPlaylistTitle
~ TextView tvPlaylistDescription
~ TextView tvPlaylistSCore
~ ImageView playlistImage
~ ListView listView
# void onCreate(Bundle)
}


class school.videopirateapp.Dialogs.LoginDialogActivity {
~ EditText etUsername
~ EditText etPassword
~ Button btnLogin
~ Button btnSignup
# void onCreate(Bundle)
}


class school.videopirateapp.ExampleInstrumentedTest {
+ void useAppContext()
}

class school.videopirateapp.ListViewComponents.VideoAdapter {
- Context context
- int resource
- ArrayList<Video> videos
+ <<Create>> VideoAdapter(Context,int,List<Video>)
+ View getView(int,View,ViewGroup)
+ int getCount()
}


class school.videopirateapp.Dialogs.PlaylistOptionsDialogActivity {
# void onCreate(Bundle)
}

class school.videopirateapp.DataStructures.User {
- {static} User defaultUser
- String name
- Playlist Uploads
- Map<String,ArrayList<Comment>> Comments
- ArrayList<String> ownedPlaylists
- String Password
- ArrayList<Byte> Image
- ArrayList<String> Upvotes
- ArrayList<String> Downvotes
- Integer videosWatched
- String Description
+ <<Create>> User()
+ <<Create>> User(String,String)
+ {static} User Default()
+ String getDescription()
+ void setDescription(String)
+ String getPassword()
+ void setPassword(String)
+ String getName()
+ void setName(String)
+ void addPlaylist(Playlist)
+ Playlist getUploads()
+ void setUploads(Playlist)
+ Map<String,ArrayList<Comment>> getComments()
+ void setComments(Map<String,ArrayList<Comment>>)
+ ArrayList<String> getOwnedPlaylists()
+ void setOwnedPlaylists(ArrayList<String>)
+ ArrayList<Byte> getImage()
+ void setImage(ArrayList<Byte>)
+ void addComment(Comment)
+ void addVideo(Video)
+ ArrayList<String> getUpvotes()
+ void setUpvotes(ArrayList<String>)
+ ArrayList<String> getDownvotes()
+ void setDownvotes(ArrayList<String>)
+ Integer getVideosWatched()
+ void setVideosWatched(Integer)
+ void upvoteVideo(Video)
+ void downvoteVideo(Video)
+ String toString()
}


class school.videopirateapp.DataStructures.Video {
- {static} Video defaultVideo
- String Title
- String Uploader
- ArrayList<Comment> Comments
- Integer Views
- Integer Upvotes
- Integer Downvotes
- String UploadDate
- ArrayList<Byte> Thumbnail
- String Url
- Integer Score
+ <<Create>> Video(String,String,ArrayList<Comment>,Integer,Integer,Integer,String,ArrayList<Byte>,String)
+ <<Create>> Video(String,String)
+ <<Create>> Video()
+ ArrayList<Byte> getThumbnail()
+ void setThumbnail(ArrayList<Byte>)
+ String getUploadDate()
+ void setUploadDate(String)
+ String getTitle()
+ void setTitle(String)
+ String getUploader()
+ void setUploader(String)
+ ArrayList<Comment> getComments()
+ void setComments(ArrayList<Comment>)
+ Integer getViews()
+ void setViews(Integer)
+ Integer getUpvotes()
+ void setUpvotes(Integer)
+ Integer getDownvotes()
+ void setDownvotes(Integer)
+ String getUrl()
+ void setUrl(String)
+ Integer getScore()
+ void setScore(Integer)
+ void addComment(Comment)
+ void upvote()
+ void downvote()
+ void view()
+ {static} Video Default()
+ String Context()
+ String toString()
}


class school.videopirateapp.Activities.VideoPageActivity {
~ Video currentVideo
~ TextView tvUploader
~ TextView tvVideoTitle
~ TextView tvScore
~ EditText etComment
~ Button btnAddComment
~ Button btnUpvote
~ Button btnDownvote
~ Button btnBack
~ Button btnVideoOptions
~ Button btnUserPage
~ ListView lvComments
~ CommentAdapter commentAdapter
~ VideoView videoView
~ ImageView uploaderImage
# void onCreate(Bundle)
}


class school.videopirateapp.Dialogs.UploadVideoDialogActivity {
~ ImageView thumbnail
~ Button btnChooseVideo
~ Button btnUploadVideo
~ EditText etVideoTitle
# void onCreate(Bundle)
+ void ChooseVideo(View)
+ void ConfirmUploadVideo(View)
}


class school.videopirateapp.DatabaseDev {
~ EditText Tree
~ EditText Message
# void onCreate(Bundle)
}


abstract class school.videopirateapp.GlobalVariables {
+ {static} Optional<User> loggedUser
- {static} String PREFERENCE_FILE_NAME
- {static} SharedPreferences sharedPreferences
+ <<Create>> GlobalVariables(Context)
- <<Create>> GlobalVariables()
}


class school.videopirateapp.Activities.SignupActivity {
~ EditText etName
~ EditText etPassword
# void onCreate(Bundle)
+ void Close(View)
+ void CreateUser(View)
}


class school.videopirateapp.Dialogs.VideoOptionsDialogActivity {
# void onCreate(Bundle)
}

class school.videopirateapp.Activities.UserPageActivity {
~ User user
~ ArrayList<Video> videos
~ ArrayList<Playlist> playlists
~ ArrayList<Comment> comments
~ ImageView UserImage
~ TextView UserDescription
~ TextView UserName
~ ListView listView
~ Button btnVideos
~ Button btnPlaylists
~ Button btnComments
~ Button btnBack
~ Button btnUserOptions
~ VideoAdapter videoAdapter
~ CommentAdapter commentAdapter
~ PlaylistAdapter playlistAdapter
# void onCreate(Bundle)
+ void ShowVideos()
+ void ShowPlaylists()
+ void ShowComments()
+ void openVideo(View)
+ void ListViewVideos(View)
+ void ListViewPlaylists(View)
+ void ListViewComments(View)
+ void openUserPage(View)
+ void editComment(View)
+ void openCommentPage(View)
+ void deleteComment(View)
}


abstract class school.videopirateapp.Database.Playlists {
- {static} Playlist savedPlaylist
- <<Create>> Playlists()
+ {static} Playlist getSavedPlaylist()
+ {static} void setSavedPlaylist(Playlist)
+ {static} Playlist getPlaylist(String)
}


class school.videopirateapp.ListViewComponents.UserListViewComponent {
# void onCreate(Bundle)
}

class school.videopirateapp.Dialogs.CommentOptionsDialogActivity {
~ Button btnDeleteComment
~ Button btnCommentPage
~ Button btnEditComment
~ TextView tvContext
# void onCreate(Bundle)
}


class school.videopirateapp.Dialogs.UserOptionsDialogActivity {
# void onCreate(Bundle)
}

class school.videopirateapp.Utilities {
- <<Create>> Utilities()
+ {static} ArrayList<T> HashMapToArrayList(HashMap<String,T>)
+ {static} ArrayList<T> MapToArrayList(Map<String,T>)
+ {static} String TimeNow()
+ {static} void openVideoPage(Context,String)
+ {static} void openUserPage(Context,String)
+ {static} void openCommentPage(Context,String)
+ {static} void openCommentOptionsDialog(Context,Comment)
+ {static} void openSignupActivity(Context)
+ {static} void openPlaylistPage(Context,String)
+ {static} Bitmap ByteArrayToBitmap(ArrayList<Byte>)
+ {static} void openLoginDialog(Context,Button)
+ {static} void openVideoUploadDialog(Context)
+ {static} void openVideoOptionsDialog(Context,Video)
+ {static} void openUserOptionsDialog(Context,User)
+ {static} void openPlaylistOptionsDialog(Context,String)
+ {static} void Feedback(Context,String)
+ {static} void updateUserPageButton(Context,Button)
+ {static} void EvaluateVideo(Video)
}

abstract class school.videopirateapp.Database.Database {
- {static} FirebaseDatabase database
+ {static} DatabaseReference getRef(String)
+ {static} FirebaseDatabase getDatabase()
+ {static} void addUser(User)
+ {static} void addComment(Comment,Video)
+ {static} void upvoteVideo(Video,User)
+ {static} void downvoteVideo(Video,User)
+ {static} User getUser(String)
+ {static} Playlist getPlaylist(String)
+ {static} Map<String,Video> getVideos()
+ {static} Video getVideo(String)
+ {static} ArrayList<Video> getVideosArray(ArrayList<String>)
+ {static} void addVideo(Video)
+ {static} void addPlaylist(Playlist)
+ {static} void addVideoToPlaylist(Video,Playlist)
}


class school.videopirateapp.DataStructures.Playlist {
- {static} Playlist defaultPlaylist
- ArrayList<String> videos
- String title
- String owner
- String playlistDescription
- ArrayList<Byte> picture
- Integer score
- Integer upvotes
- Integer downvotes
+ <<Create>> Playlist()
+ <<Create>> Playlist(String,String)
+ ArrayList<Byte> getPicture()
+ void setPicture(ArrayList<Byte>)
+ ArrayList<String> getVideos()
+ void setVideos(ArrayList<String>)
+ String getTitle()
+ void setTitle(String)
+ String getOwner()
+ void setOwner(String)
+ String getPlaylistDescription()
+ void setPlaylistDescription(String)
+ Integer getScore()
+ void setScore(Integer)
+ Integer getUpvotes()
+ void setUpvotes(Integer)
+ Integer getDownvotes()
+ void setDownvotes(Integer)
+ void addVideo(Video)
+ {static} Playlist Default()
+ String toString()
}


class school.videopirateapp.ListViewComponents.CommentAdapter {
- Context context
- int resource
- ArrayList<Comment> comments
+ <<Create>> CommentAdapter(Context,int,ArrayList<Comment>)
+ View getView(int,View,ViewGroup)
+ int getCount()
}


class school.videopirateapp.DataStructures.Comment {
- {static} Comment defaultComment
- String Comment
- String Author
- String Context
- String Date
- ArrayList<Byte> AuthorImage
- ArrayList<Comment> Replies
+ <<Create>> Comment(String,String,String,String)
+ <<Create>> Comment(String,String)
+ <<Create>> Comment()
+ ArrayList<Byte> getAuthorImage()
+ void setAuthorImage(ArrayList<Byte>)
+ String getDate()
+ void setDate(String)
+ String getContext()
+ void setContext(String)
+ String getComment()
+ void setComment(String)
+ void setAuthor(String)
+ String getAuthor()
+ ArrayList<school.videopirateapp.DataStructures.Comment> getReplies()
+ void setReplies(ArrayList<school.videopirateapp.DataStructures.Comment>)
+ {static} Comment Default()
}


class school.videopirateapp.DataStructures.Comment$Context {
~ String str
+ <<Create>> Context(String)
+ String getContext()
+ void setContext(String)
}


class school.videopirateapp.Dialogs.MainMenuSearchVideoDialogActivity {
# void onCreate(Bundle)
}

class school.videopirateapp.ExampleUnitTest {
+ void addition_isCorrect()
}

class school.videopirateapp.ListViewComponents.DatabaseDevListViewComponent {
# void onCreate(Bundle)
}

class school.videopirateapp.ListViewComponents.CommentListViewComponent {
# void onCreate(Bundle)
}

class school.videopirateapp.Activities.MainMenuActivity {
~ Button btnUserPage
~ Button btnUploadVideo
~ Button btnRefreshVideos
~ EditText etUsername
~ EditText etPassword
~ ListView listView
~ ArrayList<Video> videos
~ VideoAdapter videosAdapter
~ String chosenTitle
~ Boolean loggedIn
+ boolean onCreateOptionsMenu(Menu)
# void onCreate(Bundle)
+ void videoListViewInit()
+ void refreshVideosButton(View)
+ void refreshVideos()
+ void uploadVideo(View)
+ void userPage(View)
+ void openVideo(View)
+ void ConfirmUploadVideo(View)
+ void ChooseVideo(View)
+ void updateUserPageButton()
}


class school.videopirateapp.ListViewComponents.VideoListViewComponent {
~ TextView uploader
~ TextView videoTitle
~ TextView upvotes
~ TextView downvotes
# void onCreate(Bundle)
+ void openVideo(View)
}


class school.videopirateapp.Activities.CommentPageActivity {
# void onCreate(Bundle)
}



androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.MainActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.ListViewComponents.PlaylistListViewComponent
android.widget.ArrayAdapter <|-- school.videopirateapp.ListViewComponents.PlaylistAdapter
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Activities.PlaylistPageActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.LoginDialogActivity
android.widget.ArrayAdapter <|-- school.videopirateapp.ListViewComponents.VideoAdapter
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.PlaylistOptionsDialogActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Activities.VideoPageActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.UploadVideoDialogActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.DatabaseDev
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Activities.SignupActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.VideoOptionsDialogActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Activities.UserPageActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.ListViewComponents.UserListViewComponent
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.CommentOptionsDialogActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.UserOptionsDialogActivity
android.widget.ArrayAdapter <|-- school.videopirateapp.ListViewComponents.CommentAdapter
school.videopirateapp.DataStructures.Comment +.. school.videopirateapp.DataStructures.Comment$Context
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Dialogs.MainMenuSearchVideoDialogActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.ListViewComponents.DatabaseDevListViewComponent
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.ListViewComponents.CommentListViewComponent
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Activities.MainMenuActivity
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.ListViewComponents.VideoListViewComponent
androidx.appcompat.app.AppCompatActivity <|-- school.videopirateapp.Activities.CommentPageActivity
@enduml